{"version":3,"sources":["assets/StubJson.js","containers/actions/userActions.js","containers/actions/types.js","components/UserCart.jsx","components/Appbar.jsx","components/Header.jsx","components/Dashboard.jsx","containers/reducers/userReducer.js","containers/reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["ProductStub","productList","data","dispatch","type","payload","addtoCart","sendUserInformation","console","log","currencies","label","name","useStyles","makeStyles","theme","margin","spacing","connect","state","user","fetchDashboardData","withRouter","props","React","useState","open","setOpen","scroll","setScroll","start","setCurrency","handleClose","scrollType","classes","style","marginLeft","IconButton","aria-label","color","onClick","Badge","badgeContent","user_cart","length","Dialog","onClose","aria-labelledby","DialogTitle","FormControl","className","onSubmit","e","preventDefault","dict","target","value","description","location","title","notes","userdetail","add_details","push","detail","user_detail","Grid","marginTop","TextField","width","id","select","onChange","event","helperText","map","option","MenuItem","key","placeholder","InputProps","startAdornment","InputAdornment","position","DialogActions","Button","variant","grow","flexGrow","menuButton","marginRight","height","backToHome","AppBar","backgroundColor","Toolbar","edge","currency","fetch","then","res","json","result","rates","i","price","parseFloat","curr","note","toFixed","conversion","componentDidMount","UserCart","root","paper","padding","textAlign","palette","text","secondary","Typography","component","fontFamily","fontSize","container","item","xs","sm","Paper","borderRadius","seller","gutterBottom","pos","marginBottom","product","usercart","index","indexOf","splice","deleteFromCart","Dashboard","newProductList","anchorEl","person","ITEM_HEIGHT","handleClick","setState","currentTarget","productlist","not_add_into_cart","tmp","total_cost","updatedList","product_list","Appbar","Header","Component","initialState","combineReducers","action","cart_remove","middleware","thunk","store","createStore","appReducer","compose","applyMiddleware","App","basename","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.388524f7.chunk.js","sourcesContent":["const ProductStub = [\n  'EUR',\n  'USD',\n  'HRK',\n  'CHF',\n  'IDR',\n  'KRW',\n  'BGN',\n  'CNY',\n  'ISK',\n  'AUD',\n  'ILS',\n  'GBP',\n  'NZD',\n  'DKK',\n  'CAD',\n  'TRY',\n  'HUF',\n  'RON',\n  'NOK',\n  'RUB',\n  'ZAR',\n  'MYR',\n  'MXN',\n  'INR',\n  'THB',\n  'JPY',\n  'CZK',\n  'BRL',\n  'PLN',\n  'PHP',\n  'SEK',\n  'SGD',\n  'HKD']\n\nexport default ProductStub;\n","import {\n  PRODUCT_LIST,\n  SIZE_FILTER,\n  BACK_TO_HOME,\n  CART_ADD,\n  ADD_DETAILS,\n\n  CART_REMOVE,\n} from \"./types\";\nimport ProductStub from \"../../assets/StubJson\";\n\nexport const productList = (data) => (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST,\n\n    payload: data,\n    //value: ProductStub,\n  });\n};\nexport const addtoCart = (data) => (dispatch) => {\n  dispatch({\n    type: CART_ADD,\n    payload: data,\n  });\n};\nexport const removefromcart = (data) => (dispatch) => {\n  dispatch({\n    type: CART_REMOVE,\n    payload: data,\n  });\n};\nexport const sendUserInformation = (data) => (dispatch) => {\n  console.log(data)\n  dispatch({\n    type: ADD_DETAILS,\n    payload: data,\n  });\n};\n\n\nexport const fetchDashboardData = (data) => (dispatch) => {\n  dispatch({\n    type: SIZE_FILTER,\n    payload: data,\n  });\n};\n\nexport const backToHome = () => (dispatch) => {\n  dispatch({\n    type: BACK_TO_HOME,\n    payload: ProductStub,\n  });\n};\n","export const PRODUCT_LIST = \"product_list\";\r\nexport const USER_CART = \"user_cart\";\r\nexport const SIZE_FILTER = \"size_filter\";\r\nexport const CART_ADD = \"cart_add\";\r\nexport const CART_REMOVE = \"cart_remove\";\r\nexport const ADD_DETAILS = \"add_details\";\r\n\r\nexport const BACK_TO_HOME = \"back_to_home\";\r\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { sendUserInformation } from \"../containers/actions/userActions\"\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ProductStub from \"../assets/StubJson\"\n\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\n\nimport {\n  IconButton,\n  Grid,\n\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport {\n  addtoCart,\n  fetchDashboardData,\n  productList,\n} from \"../containers/actions/userActions\";\n\nconst currencies = [\n  {\n    label: 'Income',\n    name: 'Income',\n  },\n  {\n    label: 'Expenses',\n    name: 'Expenses'\n  },\n];\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n\n  },\n}));\n\n\n\nfunction UserBox(props) {\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState(\"paper\");\n  const [start, setCurrency] = React.useState('EUR');\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n\n\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  function handleClose() {\n    setOpen(false);\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    let dict = {};\n    dict['start'] = e.target.start.value;\n    dict['description'] = e.target.description.value;\n    dict['location'] = e.target.location.value;\n    dict['title'] = e.target.title.value;\n    dict['notes'] = e.target.notes.value;\n\n    let userdetail = props.user.add_details;\n    userdetail.push(dict)\n\n    props.sendUserInformation(userdetail)\n\n    console.log(props.detail)\n    console.log(e.target.title.value);\n    console.log(e.target.notes.value);\n\n\n    console.log(e.target.start.value);\n    console.log(e.target.description.value);\n    console.log(e.target.location.value);\n    console.log(props.user.user_detail)\n    setOpen(false);\n\n  }\n  const classes = useStyles();\n\n\n  return (\n    <div style={{ marginLeft: \"auto\" }}>\n      <IconButton\n        aria-label=\"show 17 new notifications\"\n        color=\"inherit\"\n        onClick={handleClickOpen(\"paper\")}>\n        {\" \"}\n        <Badge\n          badgeContent={props.user.user_cart && props.user.user_cart.length}\n          color=\"secondary\">\n          <AddBoxIcon />\n        </Badge>\n      </IconButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\">\n        <DialogTitle>ADD BUDGET</DialogTitle>\n        <FormControl className={classes.margin}>\n          <form onSubmit={handleClick}>\n            <Grid>\n\n              <Grid style={{ marginTop: \"2rem\", marginLeft: \"2rem\" }}>\n                <TextField\n                  style={{ width: \"15rem\" }}\n                  id=\"standard-select-currency\"\n                  select\n                  label=\"Select\"\n                  value={start}\n\n                  name=\"start\"\n                  onChange={handleChange}\n                  helperText=\"Please select\"\n                >\n                  {currencies.map((option) => (\n                    <MenuItem key={option.name} value={option.name}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n\n              </Grid>\n              <Grid>\n\n                <TextField\n                  style={{ width: \"6rem\", marginTop: \"2rem\" }}\n                  id=\"standard-select-currency\"\n                  select\n                  label=\"Select\"\n\n                  name=\"notes\"\n                // onChange={handleChange}\n                // helperText=\"Please select\"\n                >\n                  {ProductStub.map((option) => (\n                    <MenuItem\n\n                      key={option} value={option}>\n                      {option}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n\n\n\n\n                <TextField\n                  className={classes.margin}\n                  style={{\n                    marginTop: \"2rem\",\n                    marginLeft: \"2rem\",\n                    width: \"10rem\"\n                  }}\n                  id=\"input-with-icon-textfield\"\n                  name=\"location\"\n                  label=\"Value\"\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid>\n                <TextField\n                  className={classes.margin}\n                  style={{\n                    marginTop: \"2rem\",\n                    marginLeft: \"2rem\",\n                    width: \"15rem\"\n                  }}\n                  id=\"input-with-icon-textfield\"\n                  name=\"description\"\n                  label=\"Add Description\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <DialogActions >\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n          </Button>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\n\n            </DialogActions>\n          </form>\n        </FormControl>\n      </Dialog>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  addtoCart,\n  fetchDashboardData,\n  sendUserInformation,\n  productList,\n})(withRouter(UserBox));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  backToHome,\n  productList,\n  addtoCart,\n} from \"../containers/actions/userActions\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport UserCart from \"../components/UserCart\";\nimport ProductStub from \"../assets/StubJson\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { sendUserInformation } from \"../containers/actions/userActions\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n\n    height: \"50%\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction PrimarySearchAppBar(props) {\n\n  const handleChange = (event) => {\n    let currency = event.target.value;\n    console.log(currency, event.target.value)\n    componentDidMount(currency)\n  };\n\n  function componentDidMount(currency) {\n    fetch('https://api.exchangeratesapi.io/latest?base=' + currency)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          conversion(result, currency)\n        },\n      )\n\n  }\n  function conversion(result, currency) {\n    let rates = result.rates\n\n    let detail = props.user.add_details\n    for (var i = 0; i < detail.length; i++) {\n      console.log(detail[i])\n      let price = parseFloat(detail[i].location)\n      let curr = detail[i].notes\n      let note = parseFloat(rates[curr])\n      price = price * note\n      detail[i].notes = currency\n      detail[i].location = price.toFixed(3)\n      console.log(price, curr, note, rates)\n\n    }\n    props.sendUserInformation(detail)\n\n  }\n\n\n  const classes = useStyles();\n\n  return (\n    <AppBar style={{ position: \"fixed\", backgroundColor: \"steelblue\" }}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          onClick={props.backToHome}\n          color=\"inherit\"\n          aria-label=\"home\">\n          <HomeIcon />\n        </IconButton>\n        <Grid>\n          <TextField\n            style={{ width: \"12rem\" }}\n            id=\"standard-select-currency\"\n            select\n            label=\"Select\"\n\n            name=\"start\"\n            onChange={handleChange}\n            helperText=\"Please select\"\n          >\n            {ProductStub.map((option) => (\n              <MenuItem\n\n                key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n\n        <UserCart />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  productList,\n  addtoCart,\n  backToHome,\n  sendUserInformation,\n})(withRouter(PrimarySearchAppBar));\n","// * Neetu Chauhan * /\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport { withRouter } from \"react-router-dom\";\nimport { sendUserInformation } from \"../containers/actions/userActions\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: \"#A66782\"\n    },\n}));\nfunction FullWidthGrid(props) {\n    const classes = useStyles();\n    function deleteFromCart(product) {\n\n\n        let usercart = props.user.add_details;\n\n        let index = usercart.indexOf(product);\n        usercart.splice(index, 1);\n\n        props.sendUserInformation(usercart)\n\n    };\n\n    return (\n        <div className={classes.root}>\n\n            <Typography variant=\"h4\" component=\"h2\"\n                style={{\n                    fontFamily: \"cursive\",\n                    fontSize: \"3rem\",\n                    color: \"darkblue\"\n                }}\n            >Budget</Typography>\n            <Grid\n\n            >\n                {props.user.add_details && props.user.add_details.length ? (\n                    <Grid container\n                        spacing={2}\n                    >\n                        {props.user.add_details.map((user) => <Grid item xs={6} sm={3}>\n\n                            <Paper className={classes.paper}>\n\n                                < Button style={{\n                                    borderRadius: 30,\n                                    backgroundColor: \"#365E7F\",\n                                    padding: \"10px 28px\",\n                                    fontSize: \"10px\",\n                                    marginRight: \"1rem\", color: \"white\"\n                                }}\n                                    variant=\"contained\"\n                                >\n                                    {user.start}\n                                </Button>\n\n                                <Typography>\n                                    {user.notes}\n\n                                </Typography>\n\n                                <Typography>\n                                    {user.seller}\n\n                                </Typography>\n                                <Typography variant=\"h5\" className={classes.title} color=\"textSecondary\" gutterBottom style={{ fontFamily: \"fantasy\" }}>\n                                    {user.title}\n                                </Typography>\n\n                                <Typography className={classes.pos} color=\"textSecondary\"\n                                    style={{ color: \"white\", fontSize: \"3rem\" }}\n                                >\n                                    {user.location}\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"p\">\n                                    {user.description}\n\n                                </Typography>\n\n                                <Grid container spacing={3}>\n                                    <Grid>\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"comments\"\n                                        >\n                                            <DeleteIcon style={{ marginBottom: \"-6rem\", marginLeft: \"14rem\" }}\n                                                onClick={() => deleteFromCart(user)}\n                                            />\n                                        </IconButton>\n                                    </Grid>\n\n\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                        )}\n                    </Grid>\n                ) : (\n                        <div style={{ marginLeft: \"35rem\", marginTop: \"6rem\" }}>\n                            <NotificationsActiveIcon style={{ fontSize: \"28rem\", color: \"darkgrey\" }} />\n                            <div style={{ marginLeft: \"6rem\" }}>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: \"red\", fontFamily: \"fantasy\" }}>\n                                    Nothing to show!\n                        </Typography>\n                                <Typography\n                                    style={{ color: \"darkslateblue\", fontFamily: \"fantasy\" }}\n                                    variant=\"body2\"\n                                    color=\"darkcyan\"\n                                    component=\"p\">\n                                    Nothing added,once you add you'll see here\n                        </Typography>\n                            </div>\n                        </div>\n\n\n                    )}\n\n            </Grid>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => ({\n    user: state.user\n    ,\n});\n\nexport default connect(mapStateToProps, {\n\n    sendUserInformation,\n})(withRouter(FullWidthGrid));\n","import React, { Component } from \"react\";\nimport Appbar from \"./Appbar\";\n\nimport ProductStub from \"../assets/StubJson\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addtoCart, productList } from \"../containers/actions/userActions\";\n\nimport Header from \"../components/Header\";\n\n\n\n\n\nclass Dashboard extends Component {\n  state = {\n    newProductList: ProductStub,\n    anchorEl: null,\n    person: [],\n  };\n  ITEM_HEIGHT = 48;\n\n\n  handleClick = (event) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  deleteFromCart = (product) => {\n    console.log(\"d\");\n    let usercart = this.props.user.user_cart;\n    let productlist = this.props.user.not_add_into_cart;\n    let index = usercart.indexOf(product);\n    usercart.splice(index, 1);\n    let tmp = parseFloat(this.props.user.total_cost);\n    tmp = tmp - product.price;\n    tmp = tmp.toFixed(2);\n\n    this.props.addtoCart([usercart, tmp]);\n\n\n    productlist.push(product);\n    this.props.fetchDashboardData(productlist);\n    let updatedList = this.props.user.product_list;\n    updatedList.push(product);\n    this.props.productList(updatedList);\n  };\n\n  render() {\n\n    return (\n      <div>\n        <div style={{ height: \"5rem\" }}>\n          <Appbar />\n        </div>\n        <Header />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  productList,\n  addtoCart,\n})(withRouter(Dashboard));\n","import {\r\n  PRODUCT_LIST,\r\n  SIZE_FILTER,\r\n  CART_ADD,\r\n  CART_REMOVE,\r\n  BACK_TO_HOME,\r\n  ADD_DETAILS,\r\n\r\n} from \"../actions/types\";\r\nimport ProductStub from \"../../assets/StubJson\";\r\nconst initialState = {\r\n  user_cart: [],\r\n  product_list: ProductStub,\r\n  not_add_into_cart: ProductStub,\r\n  total_cost: 0.0,\r\n  add_details: []\r\n\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST:\r\n      return {\r\n        ...state,\r\n        product_list: action.payload,\r\n      };\r\n    case CART_ADD:\r\n      return {\r\n        ...state,\r\n        user_cart: action.payload[0],\r\n        total_cost: action.payload[1],\r\n      };\r\n    case SIZE_FILTER:\r\n      return {\r\n        ...state,\r\n        not_add_into_cart: action.payload,\r\n      };\r\n    case CART_REMOVE:\r\n      return {\r\n        ...state,\r\n        cart_remove: action.payload,\r\n      };\r\n    case BACK_TO_HOME:\r\n      return {\r\n        ...state,\r\n        product_list: state.not_add_into_cart,\r\n      };\r\n    case ADD_DETAILS:\r\n      return {\r\n        ...state,\r\n        add_details: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport userReducer from \"./userReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n});\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nimport Dashboard from \"./components/Dashboard\";\n// Main Routes file\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport appReducer from \"./containers/reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nconst store =\n  process.env.NODE_ENV === \"development\"\n    ? createStore(\n      rootReducer,\n      initialState,\n      compose(applyMiddleware(...middleware))\n    )\n    : createStore(\n      rootReducer,\n      initialState,\n      compose(applyMiddleware(...middleware))\n    );\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"budgetapp\">\n        <Route exact path=\"/\" name=\"Dashboard\" component={Dashboard} />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}